generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  username      String         @unique
  passwordHash  String
  firstName     String?
  lastName      String?
  profileImage  String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  lastLoginAt   DateTime?
  isActive      Boolean        @default(true)
  sessions      Session[]
  messages      Message[]
  notifications Notification[]
  threads       Thread[]       @relation("ThreadParticipants")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Thread {
  id           String    @id @default(cuid())
  title        String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  messages     Message[]
  participants User[]    @relation("ThreadParticipants")
}

model Message {
  id            String         @id @default(cuid())
  content       String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  userId        String
  user          User           @relation(fields: [userId], references: [id])
  threadId      String
  thread        Thread         @relation(fields: [threadId], references: [id])
  parentId      String?
  parent        Message?       @relation("Replies", fields: [parentId], references: [id])
  replies       Message[]      @relation("Replies")
  notifications Notification[]
}

model Notification {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  messageId String
  message   Message  @relation(fields: [messageId], references: [id])
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
} 